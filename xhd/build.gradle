apply plugin: 'com.android.library'

//apply plugin: 'com.github.dcendents.android-maven'
//apply plugin: 'com.jfrog.bintray'

//version = "1.01"                                                              // #CONFIG# // project version

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.0"

    defaultConfig {
        minSdkVersion 9
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    lintOptions {
        abortOnError false
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:25.0.0'
    testCompile 'junit:junit:4.12'
}

//ext {
//    PUBLISH_GROUP_ID = 'com.lisn'
//    PUBLISH_ARTIFACT_ID = 'xhd'
//    PUBLISH_VERSION = '1.0'
//}
//
//apply from: 'https://raw.githubusercontent.com/blundell/release-android-library/master/android-release-aar.gradle'
////最终生成的compile地址：compile 'com.github.xiaozhucdj:sildbacklibrary:1.0'
////terminal中执行gradlew clean build generateRelease

//--------------------

//region

/*
//region Description
//以下开始是将Android Library上传到jcenter的相关配置

apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'

//项目主页
def siteUrl = 'https://github.com/cnlisn'    // project homepage
//项目的版本控制地址
def gitUrl = 'https://github.com/cnlisn' // project git

//发布到组织名称名字，必须填写
group = "com.lisn"
//发布到JCenter上的项目名字，必须填写
def libName = "xhd"
// 版本号，下次更新是只需要更改版本号即可
version = "1.00"
*/
/**  上面配置后上传至jcenter后的编译路径是这样的： compile 'cn.bluemobi.dylan:sqlitelibrary:1.0'  **//*


//生成源文件
task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}
//生成文档
task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    options.encoding "UTF-8"
    options.charSet 'UTF-8'
    options.author true
    options.version true
    options.links "https://github.com/linglongxin24/FastDev/tree/master/mylibrary/docs/javadoc"
    failOnError false
}

//文档打包成jar
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}
//拷贝javadoc文件
task copyDoc(type: Copy) {
    from "${buildDir}/docs/"
    into "docs"
}

//上传到jcenter所需要的源码文件
artifacts {
    archives javadocJar
    archives sourcesJar
}

// 配置maven库，生成POM.xml文件
install {
    repositories.mavenInstaller {
        // This generates POM.xml with proper parameters
        pom {
            project {
                packaging 'aar'
                name 'This is a lightweight SQLite database framework'
                url siteUrl
                licenses {
                    license {
                        name 'This is a lightweight SQLite database framework'
                        url 'https://github.com/linglongxin24/SQLite'
                    }
                }
                developers {
                    developer {
                        id 'ds'
                        name 'lisn'
                        email 'cnlishan@163.com'
                    }
                }
                scm {
                    connection gitUrl
                    developerConnection gitUrl
                    url siteUrl
                }
            }
        }
    }
}

//上传到jcenter
Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())
bintray {
    user = properties.getProperty("bintray.user")    //读取 local.properties 文件里面的 bintray.user
    key = properties.getProperty("bintray.apikey")   //读取 local.properties 文件里面的 bintray.apikey
    configurations = ['archives']
    pkg {
        repo = "maven"
        name = "xhd-utils"    //发布到JCenter上的项目名字，必须填写
        desc = 'This is a lightweight SQLite database framework'    //项目描述
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = ["Apache-2.0"]
        publish = true
    }
}
//endregion
*/

//gradlew install
//endregion
//--------------------

/*
ext {
    bintrayRepo = 'maven'
    bintrayName = 'xhd-library'

    publishedGroupId = 'com.lisn'
    libraryName = 'xhd'
    artifact = 'lisn'

    libraryDescription = 'a xhd for android'

    siteUrl = 'https://github.com/cnlisn'
    gitUrl = 'https://github.com/cnlisn'

    libraryVersion = '1.1.0'

    developerId = 'xhd'
    developerName = 'lisn'
    developerEmail = '954375802@qq.com'

    licenseName = 'The Apache Software License, Version 2.0'
    licenseUrl = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
    allLicenses = ["Apache-2.0"]
}

apply from: 'https://raw.githubusercontent.com/nuuneoi/JCenter/master/installv1.gradle'
apply from: 'https://raw.githubusercontent.com/nuuneoi/JCenter/master/bintrayv1.gradle'
*/

//--------------------

/*publish {
    userOrg = 'cnlisn18'      //bintray注册的用户名
    groupId = 'com.lisn.hdtest'         //compile引用时的第1部分groupId
    artifactId = 'xhd'     //compile引用时的第2部分项目名
    publishVersion = '1.0.0'    //compile引用时的第3部分版本号
    desc = 'This is a xhd library'
    website = 'https://github.com/cnlisn'

    //上传命令 ./gradlew clean build -x test bintrayUpload -PbintrayUser=cnlisn18 -PbintrayKey=8d19d24365415bfe79239c8db0327eb861042b02 -PdryRun=false
    //上传命令 ./gradlew clean build -x test bintrayUpload -PbintrayUser=cnlisn18 -PbintrayKey=8d19d24365415bfe79239c8db0327eb861042b02 -PdryRun=false
}*/

apply plugin: 'com.novoda.bintray-release'//添加

//添加
publish {
    userOrg = 'cnlisn18'//bintray.com用户名
    groupId = 'com.lisn'//jcenter上的路径
    artifactId = 'xhd'//项目名称
    publishVersion = '1.0.0'//版本号
    desc = 'this is for test'//描述，不重要
    website = 'https://github.com/cnlisn'//网站，最好有，不重要
}
//--------------------
/*
//region 11

// 项目的主页，项目有提交到github 就可以把 这项写上去，没有的话也可以不用，不过下
//面有引用到的 “siteUrl ” 也要对应的去掉
def siteUrl = 'https://github.com/cnlisn'
// Git仓库的url，项目有提交到github 就可以把 这项写上去，没有的话也可以不用，不过下面有引用到的 “siteUrl ” 也要对应的去掉
def gitUrl = 'https://github.com/cnlisn'


// Maven Group ID for the artifact，一般填你唯一的包名
//比如 compile 'com.android.support:support-v4:24.0.0' 中的
//com.android.support 部分
group = "com.lisn"

install {
    repositories.mavenInstaller {
        // This generates POM.xml with proper parameters
        pom {
            project {
                packaging 'aar'
                // Add your description here
                name 'xhd'     //项目描述
                url siteUrl
                // Set your license
                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id 'cnlisn'        //填写的一些基本信息
                        name 'cnlisn'
                        email 'cnlishan@163.com'
                    }
                }
                scm {
                    connection gitUrl
                    developerConnection gitUrl
                    url siteUrl
                }
            }
        }
    }
}
task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}
task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    options.encoding = "UTF-8" //添加编码方式，才不会报编码错误
}
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}
artifacts {
    archives javadocJar
    archives sourcesJar
}
Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())
bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")
    configurations = ['archives']
    pkg {
        repo = "maven"
        name = "xhd"    //发布到JCenter上的项目名字
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = ["Apache-2.0"]
        publish = true
    }
}

//endregion
*/

//---------------
/*
//region 22
def siteUrl = 'https://github.com/cnlisn' // 项目的主页
def gitUrl = 'https://github.com/cnlisn'  // Git仓库的url

group = "com.cnlisn" // 这里是groupId ,必须填写  一般填你唯一的包名

install {
    repositories.mavenInstaller {
        // This generates POM.xml with proper parameters
        pom {
            project {
                packaging 'aar'
                // 项目描述，复制我的话，这里需要修改。
                name 'hongdian biaozhi '   //项目描述
                url siteUrl
                // 软件开源协议，现在一般都是Apache License2.0吧，复制我的，这里不需要修改。
                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                //填写开发者基本信息，复制我的，这里需要修改。
                developers {
                    developer {
                        id 'DS'            //你公司的id
                        name 'lisn'      //你的用户名
                        email 'cnlishan@163.com' // 你的邮箱
                    }
                }

                // SCM，复制我的，这里不需要修改。
                scm {
                    connection gitUrl
                    developerConnection gitUrl
                    url siteUrl
                }
            }
        }
    }
}
// 生成jar包的task，不需要修改。
task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}
// 生成javaDoc的jar，不需要修改
task javadoc(type: Javadoc) {
    options.encoding = "UTF-8"
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

//下面设置编码格式，重点注意，如果不设置可能会在gradlew install的时候出现GBK编码映射错误
javadoc {
    options {
        encoding "UTF-8"
        charSet 'UTF-8'
        author true
        version true
        links "http://docs.oracle.com/javase/7/docs/api"
//        title 'A CalendarView Support Lunar Calendar For Android'   // 文档标题
        title 'lisn test For Android'   // 文档标题
    }
}

artifacts {
//    archives javadocJar
    archives sourcesJar
}

// 生成jar包
task releaseJar(type: Copy) {
    from( 'build/intermediates/bundles/release')
    into( '../jar')
    include('classes.jar')
    rename('classes.jar', 'okgo-' + version + '.jar')
}

// 这里是读取Bintray相关的信息，我们上传项目到github上的时候会把gradle文件传上去，
// 所以不要把帐号密码的信息直接写在这里，写在local.properties中，这里动态读取。
Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())
bintray {

    //读取 local.properties 文件里面的 bintray.user
    user = properties.getProperty("bintray.user")

    //读取 local.properties 文件里面的 bintray.apikey
    key = properties.getProperty("bintray.apikey")

    configurations = ['archives']
    pkg {
        userOrg = "cnlisn18"        //发布到JCenter的组织，注意新版本的bintray是需要手动创建的
        repo = "maven"              //发布到JCenter上的仓库名称，注意新版本的bintray是需要手动创建的
        // 发布到Bintray上的项目名字
        name = "xhd-library"
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = ["Apache-2.0"]
        publish = true  // 是否是公开项目
    }
}
//endregion
*/

//---------------

/*
def siteUrl = 'https://github.com/cnlisn'                        // #CONFIG# // project homepage
def gitUrl = 'https://github.com/cnlisn'                     // #CONFIG# // project git
group = "com.lisn"                                                          // #CONFIG# // Maven Group ID for the artifact (pageckage name is ok)

install {
    repositories.mavenInstaller {
        // This generates POM.xml with proper parameters
        pom {
            project {
                packaging 'aar'
                name 'xhd For Android'                                   // #CONFIG# // project title
                url siteUrl
                // Set your license
                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id 'lisn'                                           // #CONFIG# // your user id (you can write your nickname)
                        name 'lisn'                                       // #CONFIG# // your user name
                        email '954375802@qq.com'                               // #CONFIG# // your email
                    }
                }
                scm {
                    connection gitUrl
                    developerConnection gitUrl
                    url siteUrl
                }
            }
        }
    }
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    // archives javadocJar
    archives sourcesJar
}

Properties properties = new Properties()
boolean isHasFile = false
if (project.rootProject.file('local.properties') != null){
    isHasFile = true
    properties.load(project.rootProject.file('local.properties').newDataInputStream())
}
bintray {
    user = isHasFile ? properties.getProperty("bintray.user") : System.getenv("bintray.user")
    key = isHasFile ? properties.getProperty("bintray.apikey") : System.getenv("bintray.apikey")
    configurations = ['archives']
    pkg {
        repo = "maven"
        name = "xhd"                                                 // #CONFIG# project name in jcenter
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = ["Apache-2.0"]
        publish = true
    }
}
*/

//---------------

